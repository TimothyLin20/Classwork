import arcade
import os

WIDTH = 560
HEIGHT = 620
TITLE = "Pacman"
MOVEMENT_SPEED = 5
MAP_WIDTH = 28 * 20
MAP_HEIGHT = 32 * 20

player_direction = ""

class Ghost(arcade.Sprite):
    def __init__(self):
        super().__init__()

        file_path = os.path.dirname(os.path.abspath(__file__))
        os.chdir(file_path)

        self.ghost = arcade.Sprite()

        self.setup()
        self.on_draw()

    def setup(self):
        character_scale = 1
        self.player.stand_right_textures.append(arcade.load_texture("images/ghost.png", scale=character_scale))

    def on_draw(self):
        pass

    def next_step(self):
        # choose next move until hit wall
        pass

class Map(arcade.Window):
    map = [
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
        "%............%%............%",
        "%.%%%%.%%%%%.%%.%%%%%.%%%%.%",
        "%.%%%%.%%%%%.%%.%%%%%.%%%%.%",
        "%.%%%%.%%%%%.%%.%%%%%.%%%%.%",
        "%..........................%",
        "%.%%%%.%%.%%%%%%%%.%%.%%%%.%",
        "%.%%%%.%%.%%%%%%%%.%%.%%%%.%",
        "%......%%....%%....%%......%",
        "%%%%%%.%%%%%-%%-%%%%%.%%%%%%",
        "-----%.%%%%%-%%-%%%%%.%-----",
        "-----%.%%----------%%.%-----",
        "-----%.%%-%%%%%%%%-%%.%-----",
        "%%%%%%.%%-%------%-%%.%%%%%%",
        "------.---%------%---.------",
        "%%%%%%.%%-%------%-%%.%%%%%%",
        "-----%.%%-%%%%%%%%-%%.%-----",
        "-----%.%%----------%%.%-----",
        "-----%.%%-%%%%%%%%-%%.%-----",
        "%%%%%%.%%-%%%%%%%%-%%.%%%%%%",
        "%............%%............%",
        "%.%%%%.%%%%%.%%.%%%%%.%%%%.%",
        "%.%%%%.%%%%%.%%.%%%%%.%%%%.%",
        "%...%%.......--.......%%...%",
        "%%%.%%.%%.%%%%%%%%.%%.%%.%%%",
        "%%%.%%.%%.%%%%%%%%.%%.%%.%%%",
        "%......%%....%%....%%......%",
        "%.%%%%%%%%%%.%%.%%%%%%%%%%.%",
        "%.%%%%%%%%%%.%%.%%%%%%%%%%.%",
        "%..........................%",
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
    ]

    def __init__(self, WIDTH, HEIGHT, TITLE):
        super().__init__(WIDTH, HEIGHT, TITLE)

        file_path = os.path.dirname(os.path.abspath(__file__))
        os.chdir(file_path)

        self.brick_list = arcade.SpriteList()
        self.food_list = arcade.SpriteList()
        self.player = Player()

        self.setup()

    def setup(self):
        arcade.start_render()
        arcade.set_background_color(arcade.color.BLUE)
        y = MAP_HEIGHT

        for row in Map.map:
            x = 0
            for element in row:
                if element == "%":
                    brick = arcade.Sprite("images/blue.png", center_x=x + 10, center_y=y - 25, scale=0.0385)
                    self.brick_list.append(brick)

                elif element == ".":
                    food = arcade.Sprite("images/food.png", center_x=x + 10, center_y=y - 25, scale=0.03)
                    self.food_list.append(food)

                x += 20
            y -= 20

    def on_draw(self):
        self.brick_list.draw()
        self.food_list.draw()
        self.player.draw()

    def update(self, delta_time):
        self.brick_list.update()
        self.food_list.update()

        print(player_direction)
        if player_direction == "U":
            self.player.change_y = MOVEMENT_SPEED
        elif player_direction == "D":
            self.player.change_y = -MOVEMENT_SPEED
        elif player_direction == "L":
            self.player.change_x = -MOVEMENT_SPEED
        elif player_direction == "R":
            self.player.change_x = MOVEMENT_SPEED
        self.player.update()

    def on_key_press(self, key, modifiers):
        global player_direction
        if key == arcade.key.UP:
            player_direction = "U"
        elif key == arcade.key.DOWN:
            player_direction = "D"
        elif key == arcade.key.LEFT:
            player_direction = "L"
        elif key == arcade.key.RIGHT:
            player_direction = "R"
        elif key == arcade.key.ENTER:
            pass

class Player(arcade.Sprite):
    def __init__(self, filename="images/pacman.png", center_x=280, center_y=155, scale=0.008):
        super().__init__(filename = filename, center_x = center_x, center_y=center_y, scale = scale)

    """def on_draw(self):
        self.draw()"""

class MyGame():
    def __init__(self):
        super().__init__()
        self.map = Map(WIDTH, HEIGHT, TITLE)

    def update(self, delta_time):

        hit_list = arcade.check_for_collision_with_list(self.player, self.map.food_list)

        for food in hit_list:
            food.kill()
            self.player.score += 1

def main():
    window = MyGame()
    arcade.run()

if __name__ == '__main__':
    main()
